[{"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/index.tsx":"1","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/App.tsx":"2","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/providers/index.tsx":"3","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/index.ts":"4","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/theme/index.tsx":"5","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useThemeMode.tsx":"6","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/components/Nav/index.tsx":"7","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/api/index.ts":"8","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/views/Account/index.tsx":"9","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/i18n.ts":"10","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/userSlice.ts":"11","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useTokenList.ts":"12","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/components/TokenListSelect/index.tsx":"13","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/api/client.ts":"14","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/otherSlice.ts":"15","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/unisave-list@1.1.10.ts":"16","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/unisave-mattataki@1.3.0.ts":"17","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useBalances.ts":"18","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useMulticall.ts":"19","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/contracts.ts":"20","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/providers.ts":"21","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useSigner.ts":"22","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/index.ts":"23","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/contracts/MulticallFactory.ts":"24","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/erc20Helper.ts":"25","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useERC20Single.ts":"26","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/contracts/BaseErc20Factory.ts":"27","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useLastUpdated.ts":"28","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/utils/index.ts":"29"},{"size":548,"mtime":1624962843787,"results":"30","hashOfConfig":"31"},{"size":436,"mtime":1624962888753,"results":"32","hashOfConfig":"31"},{"size":921,"mtime":1624961535031,"results":"33","hashOfConfig":"31"},{"size":1255,"mtime":1624959827938,"results":"34","hashOfConfig":"35"},{"size":3466,"mtime":1624960052043,"results":"36","hashOfConfig":"35"},{"size":241,"mtime":1624959827934,"results":"37","hashOfConfig":"31"},{"size":181,"mtime":1624962409715,"results":"38","hashOfConfig":"31"},{"size":378,"mtime":1624959827934,"results":"39","hashOfConfig":"35"},{"size":3123,"mtime":1628669567363,"results":"40","hashOfConfig":"31"},{"size":596,"mtime":1624959827934,"results":"41","hashOfConfig":"31"},{"size":1517,"mtime":1624959827938,"results":"42","hashOfConfig":"31"},{"size":3761,"mtime":1628666845984,"results":"43","hashOfConfig":"31"},{"size":5785,"mtime":1628668199197,"results":"44","hashOfConfig":"31"},{"size":1081,"mtime":1624969407531,"results":"45","hashOfConfig":"31"},{"size":281,"mtime":1624959827938,"results":"46","hashOfConfig":"31"},{"size":69733,"mtime":1628666420659,"results":"47","hashOfConfig":"31"},{"size":8079,"mtime":1628666420392,"results":"48","hashOfConfig":"31"},{"size":2503,"mtime":1628667908028,"results":"49","hashOfConfig":"31"},{"size":1647,"mtime":1628668325994,"results":"50","hashOfConfig":"31"},{"size":3639,"mtime":1628668245391,"results":"51","hashOfConfig":"31"},{"size":1071,"mtime":1628668265485,"results":"52","hashOfConfig":"31"},{"size":626,"mtime":1628668311295,"results":"53","hashOfConfig":"31"},{"size":306,"mtime":1624967165023,"results":"54","hashOfConfig":"31"},{"size":3025,"mtime":1628668169099,"results":"55","hashOfConfig":"31"},{"size":1540,"mtime":1628669188000,"results":"56","hashOfConfig":"31"},{"size":2288,"mtime":1628669233917,"results":"57","hashOfConfig":"31"},{"size":14204,"mtime":1628668169089,"results":"58","hashOfConfig":"31"},{"size":227,"mtime":1628667851604,"results":"59","hashOfConfig":"31"},{"size":552,"mtime":1624964599305,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"zfx4ef",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1p15vig",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/index.tsx",[],["126","127"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/App.tsx",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/providers/index.tsx",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/index.ts",[],["128","129"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/theme/index.tsx",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useThemeMode.tsx",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/components/Nav/index.tsx",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/api/index.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/views/Account/index.tsx",["130","131","132"],"import React, { useState, useEffect } from 'react'\nimport { useWallet } from 'use-wallet'\nimport { utils } from 'ethers'\nimport { Button, Card, Avatar, Space, Typography } from 'antd'\nimport { UserOutlined } from '@ant-design/icons';\nimport { isEmpty } from 'lodash'\n\nimport { balanceDecimal, shortedWalletAccount } from '../../utils/index'\nimport TokenListSelect from '../../components/TokenListSelect/index'\nimport { StandardTokenProfile } from '../../typing/TokenList'\nimport { useERC20Single } from '../../hooks/useERC20Single';\n\nconst { Paragraph, Title, Text } = Typography;\n\nconst Account: React.FC = () => {\n  const wallet = useWallet()\n  const blockNumber = wallet.getBlockNumber()\n  const [currency, setCurrency] = useState<string>('');\n  const [currentToken, setCurrentToken] = useState<StandardTokenProfile>(\n    {} as StandardTokenProfile\n  );\n\n  useEffect(() => {\n    console.log('wallet', wallet)\n  }, [wallet])\n\n  const handlerSelectCurrentToken = (token: StandardTokenProfile) => {\n    console.log('token', token);\n    setCurrency(token.address);\n    setCurrentToken(token);\n  }\n\n  const {\n    tokenProfile,\n    formattedBalance,\n  } = useERC20Single(currency);\n\n  // modal 显示/隐藏\n  const [isModalVisible, setIsModalVisible] = useState(false)\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Wallet</h1>\n      {wallet.status === 'connected' ? (\n        <>\n          <Card>\n            <div>Account: {wallet.account}</div>\n            <div>Account: {shortedWalletAccount(wallet.account)}</div>\n            <div>Balance: {wallet.balance}</div>\n            <div>Balance: {utils.formatUnits(wallet.balance, 18)}</div>\n            <div>\n              Balance:{' '}\n              {balanceDecimal(utils.formatUnits(wallet.balance, 18), 3)}\n            </div>\n            <div>blockNumber: {blockNumber}</div>\n            <Button onClick={() => wallet.reset()}>disconnect</Button>\n          </Card>\n          <br />\n          <Card>\n            <Button onClick={() => setIsModalVisible(true)}>Select</Button>\n            <div>{currency}</div>\n            <>\n              {!isEmpty(currentToken) ?\n                <>\n                  <Space>\n                    <Avatar\n                      size={30}\n                      icon={<UserOutlined />}\n                      src={currentToken.logoURI}\n                    />\n                    <Text strong>{currentToken.symbol}({currentToken.name})</Text>\n                  </Space>\n                  <div>decimals: {currentToken.decimals}</div>\n                  <div>chainId: {currentToken.chainId}</div>\n                  <div>balance: {formattedBalance}</div>\n                </> : null\n              }\n            </>\n\n            <TokenListSelect\n              setCurrentToken={handlerSelectCurrentToken}\n              isModalVisible={isModalVisible}\n              setIsModalVisible={setIsModalVisible}\n            ></TokenListSelect>\n          </Card>\n        </>\n      ) : (\n        <Card>\n          Connect:\n          <Button onClick={() => wallet.connect()}>MetaMask</Button>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default Account\n","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/i18n.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/userSlice.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useTokenList.ts",["133"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/components/TokenListSelect/index.tsx",["134"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/api/client.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/store/otherSlice.ts",[],["135","136"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/unisave-list@1.1.10.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/unisave-mattataki@1.3.0.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useBalances.ts",["137","138","139","140"],"import { BigNumber, BigNumberish, utils } from 'ethers';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { useLastUpdated } from './useLastUpdated';\nimport { staticMulticall } from './useMulticall';\n\ntype BalanceSheet = Record<string, BigNumber | undefined>;\n\nconst ABI = ['function balanceOf(address) view returns (uint256)'];\nconst balanceOfInterface = new utils.Interface(ABI);\n\nexport function useBalances(tokens: string[]) {\n  // make sure every `tokens` addresses is checksumed\n  const checksumedTokenAddresses = useMemo(\n    () => tokens.map(t => utils.getAddress(t)),\n    [tokens]\n  );\n\n  const { account } = useWallet();\n  const [balanceSheet, setBalances] = useState<BalanceSheet>({});\n  const { lastUpdated, updated } = useLastUpdated();\n\n  const balanceOf = useCallback(\n    (target: string) => {\n      // @todo: if `target` not exist, enlist the `target` into the BalanceSheet and update\n      return balanceSheet[utils.getAddress(target)] || BigNumber.from(0);\n    },\n    [tokens.join(), balanceSheet]\n  );\n\n  const fetchBalances = useCallback(async () => {\n    if (!account) return;\n    // const result = await tokens.balanceOf(account as string);\n    // setBalances(result);\n    const calls = checksumedTokenAddresses.map(target => ({\n      target,\n      callData: balanceOfInterface.encodeFunctionData('balanceOf', [account]),\n    }));\n    const { returnData } = await staticMulticall.callStatic.aggregate(calls);\n    console.info('returnData', returnData);\n    const sheet: BalanceSheet = {};\n    checksumedTokenAddresses.forEach((token, idx) => {\n      let [balance] = balanceOfInterface.decodeFunctionResult(\n        'balanceOf',\n        returnData[idx]\n      );\n      sheet[token] = balance as BigNumber;\n    });\n    console.info('sheet', sheet);\n    setBalances(sheet);\n    updated();\n  }, [checksumedTokenAddresses.join(), account]);\n  /**\n   * use Dan's example\n   * https://github.com/facebook/react/issues/14326#issuecomment-441680293\n   */\n  useEffect(() => {\n    if (tokens.length === 0 || !account) return;\n    // if (account && tokens) {\n    fetchBalances();\n    // }\n    let refreshInterval = setInterval(fetchBalances, 1000 * 10);\n    return () => clearInterval(refreshInterval);\n  }, [account, fetchBalances, tokens]);\n\n  const isEnough = useCallback(\n    (target: string, x: BigNumberish) => balanceOf(target).gte(x),\n    [balanceSheet, balanceOf]\n  );\n\n  return { balanceOf, isEnough, lastUpdated };\n}\n",["141","142"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useMulticall.ts",["143"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/contracts.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/providers.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useSigner.ts",["144","145"],"import { ethers } from 'ethers';\nimport React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\n\nexport function useSigner(addressOrIndex?: string | number) {\n  const wallet = useWallet();\n  const signer = useMemo(() => {\n    if (!wallet.ethereum) return null;\n    const provider = new ethers.providers.Web3Provider(wallet.ethereum as any);\n    return provider.getSigner(addressOrIndex);\n  }, [wallet.ethereum]);\n\n  function isSignerReady(\n    signer: ethers.providers.JsonRpcSigner | null\n  ): signer is ethers.providers.JsonRpcSigner {\n    return Boolean(signer);\n  }\n\n  return { signer, isSignerReady };\n}\n","/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/constant/index.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/contracts/MulticallFactory.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/erc20Helper.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useERC20Single.ts",["146"],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/blockchain/contracts/BaseErc20Factory.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/hooks/useLastUpdated.ts",[],"/Users/xiaotian/Code/cli-ant-temp/react-chain-temp/src/utils/index.ts",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"149","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":13,"column":9,"nodeType":"155","messageId":"156","endLine":13,"endColumn":18},{"ruleId":"153","severity":1,"message":"157","line":13,"column":20,"nodeType":"155","messageId":"156","endLine":13,"endColumn":25},{"ruleId":"153","severity":1,"message":"158","line":34,"column":5,"nodeType":"155","messageId":"156","endLine":34,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":78,"column":6,"nodeType":"161","endLine":78,"endColumn":8,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":5,"column":18,"nodeType":"155","messageId":"156","endLine":5,"endColumn":24},{"ruleId":"147","replacedBy":"164"},{"ruleId":"149","replacedBy":"165"},{"ruleId":"159","severity":1,"message":"166","line":28,"column":6,"nodeType":"167","endLine":28,"endColumn":19},{"ruleId":"159","severity":1,"message":"168","line":52,"column":6,"nodeType":"161","endLine":52,"endColumn":48,"suggestions":"169"},{"ruleId":"159","severity":1,"message":"166","line":52,"column":7,"nodeType":"167","endLine":52,"endColumn":38},{"ruleId":"159","severity":1,"message":"170","line":68,"column":5,"nodeType":"161","endLine":68,"endColumn":30,"suggestions":"171"},{"ruleId":"147","replacedBy":"172"},{"ruleId":"149","replacedBy":"173"},{"ruleId":"159","severity":1,"message":"174","line":22,"column":6,"nodeType":"161","endLine":22,"endColumn":14,"suggestions":"175"},{"ruleId":"153","severity":1,"message":"176","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"159","severity":1,"message":"177","line":11,"column":6,"nodeType":"161","endLine":11,"endColumn":23,"suggestions":"178"},{"ruleId":"159","severity":1,"message":"179","line":66,"column":6,"nodeType":"161","endLine":66,"endColumn":20,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"@typescript-eslint/no-unused-vars","'Paragraph' is assigned a value but never used.","Identifier","unusedVar","'Title' is assigned a value but never used.","'tokenProfile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenListFetch'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'Button' is defined but never used.",["181"],["182"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useCallback has missing dependencies: 'checksumedTokenAddresses' and 'updated'. Either include them or remove the dependency array.",["184"],"React Hook useCallback has an unnecessary dependency: 'balanceSheet'. Either exclude it or remove the dependency array.",["185"],["181"],["182"],"React Hook useMemo has a missing dependency: 'isSignerReady'. Either include it or remove the dependency array.",["186"],"'React' is defined but never used.","React Hook useMemo has a missing dependency: 'addressOrIndex'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [tokenListFetch]",{"range":"201","text":"202"},"Update the dependencies array to be: [account, checksumedTokenAddresses, updated]",{"range":"203","text":"204"},"Update the dependencies array to be: [balanceOf]",{"range":"205","text":"206"},"Update the dependencies array to be: [isSignerReady, signer]",{"range":"207","text":"208"},"Update the dependencies array to be: [addressOrIndex, wallet.ethereum]",{"range":"209","text":"210"},"Update the dependencies array to be: [getProfile, tokenAddress]",{"range":"211","text":"212"},[2383,2385],"[tokenListFetch]",[1878,1920],"[account, checksumedTokenAddresses, updated]",[2422,2447],"[balanceOf]",[811,819],"[isSignerReady, signer]",[410,427],"[addressOrIndex, wallet.ethereum]",[2145,2159],"[getProfile, tokenAddress]"]